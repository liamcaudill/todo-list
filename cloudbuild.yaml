steps:
  # _APP_ENV, _APP_NAME, _CLUSTER, _REGION need to be defined in the build trigger
  - name: "gcr.io/cloud-builders/docker"
    id: Build
    args:
      - "build"
      - "-t"
      - "gcr.io/$PROJECT_ID/$_APP_NAME:$SHORT_SHA"
      - "."
    timeout: 600s

  - name: "gcr.io/cloud-builders/docker"
    id: Push
    args:
      - "push"
      - "gcr.io/$PROJECT_ID/$_APP_NAME:$SHORT_SHA"

    # Install Node.js dependencies
  - name: "node"
    entrypoint: "npm"
    args: ["install"]

    # Install Cloud SQL proxy
  - id: proxy-install
    name: gcr.io/cloud-builders/npm
    entrypoint: sh
    args:
      - "-c"
      - "wget https://storage.googleapis.com/cloudsql-proxy/v1.20.1/cloud_sql_proxy.linux.amd64 -O cloud_sql_proxy && chmod +x cloud_sql_proxy"
    waitFor: ["-"]

  # Migrate database schema to the latest version
  # https://knexjs.org/#Migrations-CLI
  - id: migrate
    name: gcr.io/cloud-builders/npm
    entrypoint: sh
    args:
      - "-c"
      - "(./cloud_sql_proxy -dir=/cloudsql -instances=$_INSTANCE_CONNECTION_NAME & sleep 2) && npm run migrate-prod"
    timeout: "1200s"
    waitFor: ["npm-install", "proxy-install"]

  - name: "gcr.io/cloud-builders/gcloud"
    id: Deploy Cloud Run
    args:
      - "run"
      - "deploy"
      - "$_APP_NAME"
      - "--image"
      - "gcr.io/$PROJECT_ID/$_APP_NAME:$SHORT_SHA"
      - "--region"
      - "$_REGION"
      - "--platform"
      - "managed"
      - "--port"
      - "$_PORT"
      - "--allow-unauthenticated"
      - "--add-cloudsql-instances"
      - "$_INSTANCE_CONNECTION_NAME"
      - "--update-env-vars"
      - "INSTANCE_CONNECTION_NAME=$_INSTANCE_CONNECTION_NAME,DB_DB=$_DB_DB,DB_USER=$_DB_USER,DB_PASS=$_DB_PASS,NODE_ENV=$_NODE_ENV,LOG_LEVEL=$_LOG_LEVEL,JWT_SECRET=$_JWT_SECRET,APP_USER=$_APP_USER,APP_PASS=$_APP_PASS"

images:
  - "gcr.io/$PROJECT_ID/$_APP_NAME:$SHORT_SHA"

tags: [$_APP_NAME]
